{"version":3,"file":"static/js/297.9e345c34.chunk.js","mappings":"ifAEaA,EAA4BC,EAAAA,GAAAA,IAAH,iGAET,SAACC,GAAD,OAAWA,EAAMC,MAAMC,kBACzC,SAACF,GAAD,OAAWA,EAAMC,MAAME,iBAGrBC,EAAoBL,EAAAA,GAAAA,GAAH,4HAIb,SAACC,GAAD,OAAWA,EAAMC,MAAMI,cAC7B,SAACL,GAAD,OAAWA,EAAMC,MAAME,iBAGrBG,EAA0BP,EAAAA,GAAAA,EAAH,sHAInB,SAACC,GAAD,OAAWA,EAAMC,MAAMI,cAC7B,SAACL,GAAD,OAAWA,EAAMC,MAAME,iBAGrBI,EAA8BR,EAAAA,GAAAA,IAAH,8HACvB,SAACC,GAAD,OAAWA,EAAMC,MAAMI,cAC7B,SAACL,GAAD,OAAWA,EAAMC,MAAME,iBAMrBK,EAAuBT,EAAAA,GAAAA,IAAH,sHAId,SAACC,GAAD,OAAWA,EAAMC,MAAMC,kBAG7BO,EAAwBV,EAAAA,GAAAA,MAAH,8CAIrBW,EAAwBX,EAAAA,GAAAA,MAAH,sBAErBY,EAAuBZ,EAAAA,GAAAA,GAAH,gGAChB,SAACC,GAAD,OAAWA,EAAMC,MAAMI,cAC7B,SAACL,GAAD,OAAWA,EAAMC,MAAMW,kB,SC7ClC,MC2Be,WACb,IACMC,GADWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,cAApBC,KAER,GAAwCC,EAAAA,EAAAA,UAASC,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCH,EAAAA,EAAAA,UAAS,IAA7C,eAAOI,EAAP,KAAmBC,EAAnB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACR,IAnBkBC,EAAWC,EAmBvBC,GAnBYF,EAmBwBN,GAnBbO,EAmB+BJ,GAdvDG,EAAKG,QAAO,SAACC,GAAD,OACjBA,EAAKC,QAAQC,MAAK,SAACC,GAAD,OAChBA,EAAQN,KAAKO,cAAcC,SAASR,EAAKO,qBALpCR,GAkBPJ,EAAgBM,KACf,CAACL,KAGF,UAAC,KAAD,CAASa,GAAI,GAAb,WACE,SAAC,KAAD,CACEC,YAAatB,EAAKuB,wBAClBC,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OAAWjB,EAAciB,EAAMC,OAAOH,UAGjDlB,EAAasB,KAAI,SAACC,GAAD,OAChB,UAAC,EAAD,YACE,SAAC,EAAD,UACGA,EAAYC,SAEf,SAAC,EAAD,UACGD,EAAYE,eAEf,SAAC,EAAD,KACEF,EAAYb,QAAQgB,SACpB,SAAC,EAAD,wDAIDH,EAAYb,QAAQY,KAAI,SAACK,GAAD,OACvB,UAAC,EAAD,YACE,SAAC,EAAD,UACGA,EAAOC,QAEV,SAAC,EAAD,UACGD,EAAOrB,eAnBuBiB,EAAYC","sources":["screens/achievements/styled.ts","screens/achievements/index.ts","screens/achievements/achievements.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const AchievementsItemContainer = styled.div`\r\n  padding-bottom: 20px;\r\n  border-bottom: 1px solid ${(props) => props.theme.separatorColor};\r\n  color: ${(props) => props.theme.mainFontColor};\r\n`;\r\n\r\nexport const AchievementsTitle = styled.h2`\r\n  margin-bottom: 5px;\r\n  font-size: 16px;\r\n  margin-top: 25px;\r\n  font-family: ${(props) => props.theme.fontFamily};\r\n  color: ${(props) => props.theme.mainFontColor};\r\n`;\r\n\r\nexport const AchievementsDescription = styled.p`\r\n  margin: 0px;\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  font-family: ${(props) => props.theme.fontFamily};\r\n  color: ${(props) => props.theme.mainFontColor};\r\n`;\r\n\r\nexport const AchievementPlayertContainer = styled.div`\r\n  font-family: ${(props) => props.theme.fontFamily};\r\n  color: ${(props) => props.theme.mainFontColor};\r\n  font-size: 12px;\r\n  padding-left: 10px;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nexport const AchievementSeparator = styled.div`\r\n  width: 50%;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  border-bottom: ${(props) => props.theme.separatorColor} 1px dashed;\r\n`;\r\n\r\nexport const AchievementPlayerDate = styled.small`\r\n  margin-right: 5px;\r\n`;\r\n\r\nexport const AchievementPlayerName = styled.small``;\r\n\r\nexport const NoPlayersAchievement = styled.h4`\r\n  font-family: ${(props) => props.theme.fontFamily};\r\n  color: ${(props) => props.theme.mutedFontColor};\r\n  font-size: 12px;\r\n  margin: 0px;\r\n`;\r\n","import Achievements from \"./achievements\";\r\n\r\nexport default Achievements;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useStorage } from \"hooks\";\r\nimport { Screens } from \"enums\";\r\nimport achievementsData from \"../../data/achievements.json\";\r\n\r\nimport {\r\n  InputText,\r\n  SolidButton,\r\n  Wrapper,\r\n  List,\r\n  ListItem,\r\n  Float,\r\n  TextBox,\r\n} from \"components\";\r\n\r\nimport * as Styled from \"./styled\";\r\n\r\nfunction searchPlayer(data: any, name: any) {\r\n  if (!name) {\r\n    return data;\r\n  }\r\n\r\n  return data.filter((item: any) =>\r\n    item.players.some((jogador: any) =>\r\n      jogador.name.toLowerCase().includes(name.toLowerCase())\r\n    )\r\n  );\r\n}\r\n\r\nexport default function Achievements() {\r\n  const { i18n } = useStorage(Screens.ACHIEVEMENTS);\r\n  const text = i18n as I18n.AchievementsScreen;\r\n  const [achievements, setAchievements] = useState(achievementsData);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const filteredAchievements = searchPlayer(achievementsData, inputValue);\r\n    setAchievements(filteredAchievements);\r\n  }, [inputValue]);\r\n\r\n  return (\r\n    <Wrapper mt={20}>\r\n      <InputText\r\n        placeholder={text.searchPlayerPlaceholder}\r\n        value={inputValue}\r\n        onChange={(event) => setInputValue(event.target.value)}\r\n      />\r\n\r\n      {achievements.map((achievement) => (\r\n        <Styled.AchievementsItemContainer key={achievement.title}>\r\n          <Styled.AchievementsTitle>\r\n            {achievement.title}\r\n          </Styled.AchievementsTitle>\r\n          <Styled.AchievementsDescription>\r\n            {achievement.description}\r\n          </Styled.AchievementsDescription>\r\n          <Styled.AchievementSeparator />\r\n          {!achievement.players.length && (\r\n            <Styled.NoPlayersAchievement>\r\n              Nenhum jogador alcan√ßou esta conquista\r\n            </Styled.NoPlayersAchievement>\r\n          )}\r\n          {achievement.players.map((player) => (\r\n            <Styled.AchievementPlayertContainer>\r\n              <Styled.AchievementPlayerDate>\r\n                {player.date}\r\n              </Styled.AchievementPlayerDate>\r\n              <Styled.AchievementPlayerName>\r\n                {player.name}\r\n              </Styled.AchievementPlayerName>\r\n            </Styled.AchievementPlayertContainer>\r\n          ))}\r\n        </Styled.AchievementsItemContainer>\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n}\r\n"],"names":["AchievementsItemContainer","styled","props","theme","separatorColor","mainFontColor","AchievementsTitle","fontFamily","AchievementsDescription","AchievementPlayertContainer","AchievementSeparator","AchievementPlayerDate","AchievementPlayerName","NoPlayersAchievement","mutedFontColor","text","useStorage","Screens","i18n","useState","achievementsData","achievements","setAchievements","inputValue","setInputValue","useEffect","data","name","filteredAchievements","filter","item","players","some","jogador","toLowerCase","includes","mt","placeholder","searchPlayerPlaceholder","value","onChange","event","target","map","achievement","title","description","length","player","date"],"sourceRoot":""}