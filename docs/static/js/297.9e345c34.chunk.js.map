{"version":3,"file":"static/js/297.9e345c34.chunk.js","mappings":"ifAEaA,EAA4BC,EAAAA,GAAAA,IAAH,iGAET,SAACC,GAAD,OAAWA,EAAMC,MAAMC,kBACzC,SAACF,GAAD,OAAWA,EAAMC,MAAME,iBAGrBC,EAAoBL,EAAAA,GAAAA,GAAH,4HAIb,SAACC,GAAD,OAAWA,EAAMC,MAAMI,cAC7B,SAACL,GAAD,OAAWA,EAAMC,MAAME,iBAGrBG,EAA0BP,EAAAA,GAAAA,EAAH,sHAInB,SAACC,GAAD,OAAWA,EAAMC,MAAMI,cAC7B,SAACL,GAAD,OAAWA,EAAMC,MAAME,iBAGrBI,EAA8BR,EAAAA,GAAAA,IAAH,8HACvB,SAACC,GAAD,OAAWA,EAAMC,MAAMI,cAC7B,SAACL,GAAD,OAAWA,EAAMC,MAAME,iBAMrBK,EAAuBT,EAAAA,GAAAA,IAAH,sHAId,SAACC,GAAD,OAAWA,EAAMC,MAAMC,kBAG7BO,EAAwBV,EAAAA,GAAAA,MAAH,8CAIrBW,EAAwBX,EAAAA,GAAAA,MAAH,sBAErBY,EAAuBZ,EAAAA,GAAAA,GAAH,gGAChB,SAACC,GAAD,OAAWA,EAAMC,MAAMI,cAC7B,SAACL,GAAD,OAAWA,EAAMC,MAAMW,kB,SC7ClC,MC2Be,WACb,IACMC,GADWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,cAApBC,KAER,GAAwCC,EAAAA,EAAAA,UAASC,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCH,EAAAA,EAAAA,UAAS,IAA7C,eAAOI,EAAP,KAAmBC,EAAnB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACR,IAnBkBC,EAAWC,EAmBvBC,GAnBYF,EAmBwBN,GAnBbO,EAmB+BJ,GAdvDG,EAAKG,QAAO,SAACC,GAAD,OACjBA,EAAKC,QAAQC,MAAK,SAACC,GAAD,OAChBA,EAAQN,KAAKO,cAAcC,SAASR,EAAKO,qBALpCR,GAkBPJ,EAAgBM,KACf,CAACL,KAGF,UAAC,KAAD,CAASa,GAAI,GAAb,WACE,SAAC,KAAD,CACEC,YAAatB,EAAKuB,wBAClBC,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OAAWjB,EAAciB,EAAMC,OAAOH,UAGjDlB,EAAasB,KAAI,SAACC,GAAD,OAChB,UAAC,EAAD,YACE,SAAC,EAAD,UACGA,EAAYC,SAEf,SAAC,EAAD,UACGD,EAAYE,eAEf,SAAC,EAAD,KACEF,EAAYb,QAAQgB,SACpB,SAAC,EAAD,wDAIDH,EAAYb,QAAQY,KAAI,SAACK,GAAD,OACvB,UAAC,EAAD,YACE,SAAC,EAAD,UACGA,EAAOC,QAEV,SAAC,EAAD,UACGD,EAAOrB,eAnBuBiB,EAAYC","sources":["screens/achievements/styled.ts","screens/achievements/index.ts","screens/achievements/achievements.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const AchievementsItemContainer = styled.div`\n  padding-bottom: 20px;\n  border-bottom: 1px solid ${(props) => props.theme.separatorColor};\n  color: ${(props) => props.theme.mainFontColor};\n`;\n\nexport const AchievementsTitle = styled.h2`\n  margin-bottom: 5px;\n  font-size: 16px;\n  margin-top: 25px;\n  font-family: ${(props) => props.theme.fontFamily};\n  color: ${(props) => props.theme.mainFontColor};\n`;\n\nexport const AchievementsDescription = styled.p`\n  margin: 0px;\n  font-size: 13px;\n  line-height: 20px;\n  font-family: ${(props) => props.theme.fontFamily};\n  color: ${(props) => props.theme.mainFontColor};\n`;\n\nexport const AchievementPlayertContainer = styled.div`\n  font-family: ${(props) => props.theme.fontFamily};\n  color: ${(props) => props.theme.mainFontColor};\n  font-size: 12px;\n  padding-left: 10px;\n  margin-bottom: 3px;\n`;\n\nexport const AchievementSeparator = styled.div`\n  width: 50%;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  border-bottom: ${(props) => props.theme.separatorColor} 1px dashed;\n`;\n\nexport const AchievementPlayerDate = styled.small`\n  margin-right: 5px;\n`;\n\nexport const AchievementPlayerName = styled.small``;\n\nexport const NoPlayersAchievement = styled.h4`\n  font-family: ${(props) => props.theme.fontFamily};\n  color: ${(props) => props.theme.mutedFontColor};\n  font-size: 12px;\n  margin: 0px;\n`;\n","import Achievements from \"./achievements\";\n\nexport default Achievements;\n","import { useState, useEffect } from \"react\";\nimport { useStorage } from \"hooks\";\nimport { Screens } from \"enums\";\nimport achievementsData from \"../../data/achievements.json\";\n\nimport {\n  InputText,\n  SolidButton,\n  Wrapper,\n  List,\n  ListItem,\n  Float,\n  TextBox,\n} from \"components\";\n\nimport * as Styled from \"./styled\";\n\nfunction searchPlayer(data: any, name: any) {\n  if (!name) {\n    return data;\n  }\n\n  return data.filter((item: any) =>\n    item.players.some((jogador: any) =>\n      jogador.name.toLowerCase().includes(name.toLowerCase())\n    )\n  );\n}\n\nexport default function Achievements() {\n  const { i18n } = useStorage(Screens.ACHIEVEMENTS);\n  const text = i18n as I18n.AchievementsScreen;\n  const [achievements, setAchievements] = useState(achievementsData);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  useEffect(() => {\n    const filteredAchievements = searchPlayer(achievementsData, inputValue);\n    setAchievements(filteredAchievements);\n  }, [inputValue]);\n\n  return (\n    <Wrapper mt={20}>\n      <InputText\n        placeholder={text.searchPlayerPlaceholder}\n        value={inputValue}\n        onChange={(event) => setInputValue(event.target.value)}\n      />\n\n      {achievements.map((achievement) => (\n        <Styled.AchievementsItemContainer key={achievement.title}>\n          <Styled.AchievementsTitle>\n            {achievement.title}\n          </Styled.AchievementsTitle>\n          <Styled.AchievementsDescription>\n            {achievement.description}\n          </Styled.AchievementsDescription>\n          <Styled.AchievementSeparator />\n          {!achievement.players.length && (\n            <Styled.NoPlayersAchievement>\n              Nenhum jogador alcan√ßou esta conquista\n            </Styled.NoPlayersAchievement>\n          )}\n          {achievement.players.map((player) => (\n            <Styled.AchievementPlayertContainer>\n              <Styled.AchievementPlayerDate>\n                {player.date}\n              </Styled.AchievementPlayerDate>\n              <Styled.AchievementPlayerName>\n                {player.name}\n              </Styled.AchievementPlayerName>\n            </Styled.AchievementPlayertContainer>\n          ))}\n        </Styled.AchievementsItemContainer>\n      ))}\n    </Wrapper>\n  );\n}\n"],"names":["AchievementsItemContainer","styled","props","theme","separatorColor","mainFontColor","AchievementsTitle","fontFamily","AchievementsDescription","AchievementPlayertContainer","AchievementSeparator","AchievementPlayerDate","AchievementPlayerName","NoPlayersAchievement","mutedFontColor","text","useStorage","Screens","i18n","useState","achievementsData","achievements","setAchievements","inputValue","setInputValue","useEffect","data","name","filteredAchievements","filter","item","players","some","jogador","toLowerCase","includes","mt","placeholder","searchPlayerPlaceholder","value","onChange","event","target","map","achievement","title","description","length","player","date"],"sourceRoot":""}